#!/usr/bin/env bash

end_point='http://geo.devtrac.org/api'

login_path="user/login.json"
logout_path="user/logout.json"

field_trip_path="views/api_fieldtrips.json?display_id=current_trip"
site_visits_path="views/api_fieldtrips.json?display_id=sitevisits&filters[field_ftritem_field_trip_target_id]=${2:-0}"
site_places_path="views/api_fieldtrips.json?display_id=place&filters[nid]=${2:-0}"
site_action_items_path="views/api_fieldtrips.json?display_id=actionitems&args[nid]=${2:-0}&filters[field_actionitem_status_value]=1&filters[field_actionitem_status_value]=3"
if [ $# -eq 3 ]
then
site_action_items_path="${site_action_items_path}&args[field_actionitem_ftreportitem_target_id]=${3:-0}"
fi
node_path="node/${2:-0}.json"
node_create_path="node.json"

cookie_file='/tmp/devtrac.cookie'

login_criteria="username=${2:-username}&password=${3:-password}"

get() {
  url="$end_point/$1"
  echo "# GET $url" 1>&2
  echo 1>&2
  echo "# Response" 1>&2
  curl --trace-ascii 'curl.log' --cookie-jar "$cookie_file" --cookie "$cookie_file" --globoff "$url" 2>/dev/null | python -mjson.tool 2>/dev/null
}

post() {
  url="$end_point/$1"
  echo "# POST $url" 1>&2
  data="$2"
  echo 1>&2
  echo "# DATA $data" 1>&2
  echo 1>&2
  echo "# Response" 1>&2
  curl --trace-ascii 'curl.log' --cookie-jar "$cookie_file" --cookie "$cookie_file" --data "$data" --globoff "$url" 2>/dev/null | python -mjson.tool 2>/dev/null
}

put() {
  url="$end_point/$1"
  echo "# PUT $url" 1>&2
  filename="$2"
  echo 1>&2
  echo "# FILE $filename" 1>&2
  echo 1>&2
  echo "# Response" 1>&2
  curl --trace-ascii 'curl.log' --cookie-jar "$cookie_file" --cookie "$cookie_file" -T "$filename" --globoff "$url"
}

login() { #subcommand <username> <password>
  post "$login_path" "$login_criteria"
}

logout() { #subcommand
  post "$logout_path"
}

trip() { #subcommand
  get "$field_trip_path"
}

sites() { #subcommand <fieldtrip_nid>
  get "$site_visits_path"
}

places() { #subcommand <ftritem_nid>
  get "$site_places_path"
}

actionitems() { #subcommand <fieldtrip_nid> [ftritem_nid]
  get "$site_action_items_path"
}

create_actionitem() { #subcommand
  data=`cat actionitem.data`
  post "$node_create_path" "$data"
}

node() { #subcommand <nid>
  get "$node_path"
}

create_site() { #subcommand
   data=`cat site.data`
   post "$node_create_path" "$data"
}

update_site() { #subcommand <ftritem_nid>
   put "$node_path" "site.data"
}

create_placetype() { #subcommand
   data=`cat place.data`
   post "$node_create_path" "$data"
}

extract_subcommands() {
  # cat $0 | grep "#subcommand" | grep -v "\bgrep\b" | cut -d '(' -f 1
  cat $0 | grep "#subcommand" | grep -v "\bgrep\b" | sed -n '/(.*#subcommand/s///p'
}

usage() {
  idented_sub_commands=`extract_subcommands | sed 's/^/#         /'`
  cat <<-EOF

# d7 - A CLI util to provide assistances when dealing with DevTrac Drupal7 server
#
# Usage
#
#     ./$(basename $0) - Show this help
#
#     ./$(basename $0) <sub-command> - Access API corresponding to the <sub-command>
$idented_sub_commands

EOF
}

if [[ $# -eq 0 ]]
then
  usage
else
  eval "$1"
fi

